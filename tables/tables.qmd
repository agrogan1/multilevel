---
title: "Tables for Multilevel Models in Stata"
date: "today"
author: "Andy Grogan-Kaylor"
format:
  html:
    toc: true
    number-sections: true
    theme:
      light: cosmo
      dark: vapor
    css: styles.css
    mermaid: 
      theme: default
  typst: 
    toc: false
    number-sections: true
    columns: 1
editor: source
---

# IntroductionðŸŒ²

Stata has a number of ways of making tables. Here are some alternative commands, and some *tweaks* that may be especially useful for multilevel models.

```{r}
#| echo: false
#| output: false

library(Statamarkdown)

```

# Data Source ðŸŒ²

The data used in this example are derived from the R package *Functions and Datasets for "Forest Analytics with R"*.

According to the documentation, the source of these data are: "von Guttenbergâ€™s Norway spruce (Picea abies [L.] Karst) tree measurement data."

![Old Tjikko, a 9,550 Year Old Norway Spruce in Sweden](Old-Tjikko-Small.jpg)

The documentation goes on to further note that:

> "The data are measures from 107 trees. The trees were selected as being of average size from healthy and well stocked stands in the Alps."

# SetupðŸŒ²

```{stata, collectcode=TRUE}

clear all // clear workspace

use "gutten.dta", clear // use tree data as example

describe // describe the data

```

# Estimate a Multilevel ModelðŸŒ²

```{stata, collectcode=TRUE}

mixed height age_base i.site || tree_ID: // mixed model

est store M1 // store the estimates (this would work with multiple stored estimates)

```

# Use `estimates table` {#sec-estimates} 

```{stata, collectcode=TRUE}

estimates table M1, b(%9.3f) star // nicely formatted table of results

```

# Use `estimates store` With `, variance post`ðŸŒ²

Frustratingly, as you can see in @sec-estimates, with multilevel models, the default behavior of `estimates table` is to report the $ln$ of the random effects. Below, I use the `, variance post` option to post the *variance* rather than the *logarithm of the variance*.

> Notice how `, variance post` essentially *replays* the results, but with the random effects as variances, rather than as the logarithm of the standard deviation.

```{stata, collectcode=TRUE}

mixed height age_base i.site || tree_ID: // mixed model

estat sd, variance post // post results as variance scale rather than log scale

est store M2 // store the estimates (this would work with multiple stored estimates)

```

# Use `estimates table` To Compare These ApproachesðŸŒ²

::: {.callout-warning}
## We Usually Use `estimates table` for *Different* Models

When used with multiple sets of estimates, we usually use `estimates table` to present the results of *different* models, rather than the same model presented in different ways. Below, however, for the sake of illustration, we present the *same* model in two different ways.
:::

```{stata, collectcode=TRUE}

* nicely formatted table of results

estimates table M1 M2, b(%9.3f) star ///
  title("M1 and M2 are the Same Model Presented Differently") 

```

# Use `etable`ðŸŒ²

> `etable` is a newer Stata command that is very useful for making nicely formatted tables. `etable` works with one estimate or multiple estimates.

```{stata, collectcode=TRUE}

etable, estimates(M1) /// use these estimate(s)
novarlabel /// variable names only
cstat(_r_b) /// beta's only
showstars showstarsnote /// 
column(estimate) // column is modelname

```

> There is also a very helpful `export` option for exporting these tables to a variety of ouput formats. See `help etable` in Stata for more information. 

# Add One More Set of Estimates for IllustrationðŸŒ²

## Multiple Estimates With `estimates table`ðŸŒ²

```{stata}

mixed height age_base i.site i.location || tree_ID: // mixed model

estat sd, variance post // post results as variance scale rather than log scale

est store M3 // store the estimates (this would work with multiple stored estimates)

est table M2 M3, b(%9.3f) star 

```

## Multiple Estimates With `etable`ðŸŒ²

```{stata}

mixed height age_base i.site i.location || tree_ID: // mixed model

est store M4

etable, estimates(M1 M4) /// use these estimate(s)
novarlabel /// variable names only
cstat(_r_b) /// beta's only
showstars showstarsnote /// 
column(estimate) // column is modelname


```




