% Visualizing Multilevel Models
% Andy Grogan-Kaylor
% `s c(current_date)` `s c(current_time)`

---
geometry: margin=1 in
---

<style>body {max-width: 90%} h1 {color: #00274C;} h2 {color: #2F65A7;} p {font-size: 110%;} pre.stata {font-size: 110%;} blockquote {border-left: 5px solid #ffcb05; margin: 1.5em 10px; padding: 0.5em 10px;} code {color: red;}</style>

# Introduction

An evolving set of notes on visualizing results from multilevel models.

> When this document is presented in *slide show format*, some slides may be long, and you may need to *scroll down* to see the full slide. In slide show format use the left and right arrow keys to navigate through the slides. `b` will make the text bigger. `s` will make the text smaller.

The examples below use the `simulated_multilevel_data.dta` file from [*Multilevel Thinking*](https://agrogan1.github.io/multilevel-thinking/simulated-multi-country-data.html). Here is a [direct link](https://github.com/agrogan1/multilevel-multilingual/raw/main/simulated_multilevel_data.dta) to download the data.

# Setup

I am not terrifically fond of Stata's default `s2color` graph scheme. Therefore I make use of the `michigan` graph scheme available at: [https://agrogan1.github.io/Stata/michigan-graph-scheme/](https://agrogan1.github.io/Stata/michigan-graph-scheme/)

    set scheme michigan
	
Stata's `s1color` scheme would also would be an option as would be Asjad Naqvi's incredible `schemepack`: [https://github.com/asjadnaqvi/stata-schemepack](https://github.com/asjadnaqvi/stata-schemepack)

# Get Data

    use "https://github.com/agrogan1/multilevel-thinking/raw/main/simulate-and-analyze-multilevel-data/simulated_multilevel_data.dta", clear

# Scatterplots

    twoway scatter outcome warmth
	
	graph export myscatter.png, width(1500) replace
	
![Scatterplot](myscatter.png){width=75%}
	
# Simple Linear Fit

    twoway lfit outcome warmth
	
	graph export mylinear.png, width(1500) replace
	
![Linear Fit](mylinear.png){width=75%}

# Linear Fit With Confidence Interval

    twoway lfitci outcome warmth
	
	graph export mylfitci.png, width(1500) replace
	
![Linear Fit With Confidence Interval](mylfitci.png){width=75%}

# Combine Scatterplot and Linear Fit

    twoway (scatter outcome warmth) (lfit outcome warmth)
	
	graph export myscatterlinear.png, width(1500) replace
	
![Scatterplot and Linear Fit](myscatterlinear.png){width=75%}

# Spaghetti Plots (`spagplot`)

    spagplot outcome warmth, id(country)
	
    graph export myspaghetti.png, width(1500) replace

![Spaghetti Plot](myspaghetti.png){width=75%}
	
# Small Multiples

I use the `aspect` option to adjust the *aspect ratio* of the graph for better visual presentation. I also use the `mcolor(%30)` option to create some transparency in the dots of the scatterplot, which helps the presentation of these small multiples. The `mcolor(%30)` option could be useful in the other graphs in this tutorial as well.

    twoway (scatter outcome warmth, mcolor(%30)) (lfit outcome warmth), by(country) aspect(1)
    
	graph export mysmallmultiples.png, width(1500) replace

![Small Multiples](mysmallmultiples.png){width=75%}
	
# Multivariate (Predicted) Relationships

> A sometimes unacknowledged point is that graphs--unless we take steps to correct this--reflect *unadjusted*, or *bivariate* associations. We may sometimes wish to develop a graphs that reflect the *adjusted* or *predicted* estimates from our models.

> In multilevel models, *prediction* is a complex question. The procedures below outline graphs that incorporate predictions using the variables, but do not include predictions that incorporate the random effects. (This will be added!)

## Using Predicted Values

### Estimate The Model

	mixed outcome warmth physical_punishment i.group || country: // estimate MLM
	
### Generate Predicted Values
	
	predict outcome_hat // predict yhat
	
### Graph With `twoway` Syntax	
	
	twoway (scatter outcome_hat warmth) (lfit outcome_hat warmth)
	
	graph export mypredictedvalues.png, width(1500) replace

![Predicted Values From `predict`](mypredictedvalues.png){width=75%}

## Spaghetti Plot With Predicted Values

    spagplot outcome_hat warmth, id(country)
	
    graph export myspaghetti2.png, width(1500) replace

![Spaghetti Plot With Predicted Values](myspaghetti2.png){width=75%}
	
## `margins` and `marginsplot`

### Estimate The Model

	mixed outcome warmth physical_punishment i.group || country: // estimate MLM

### Generate Predicted Values *At Specified Values* With `margins`

	margins group, at(warmth = (1 2 3 4 5 6 7)) // predictive *margins*
	
### Graph With `marginsplot`
	
    marginsplot // plot of predicted values
	
	graph export mymarginsplot.png, width(1500) replace

![Predicted Values From `margins` and `marginsplot`](mymarginsplot.png){width=75%}
	
# Curvilinear and Linear Fits

# Random Effects









