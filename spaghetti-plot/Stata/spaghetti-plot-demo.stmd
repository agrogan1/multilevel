% Spaghetti Plot Demo
% Andy Grogan-Kaylor
% `s c(current_date)`

---
geometry: margin=1 in
---

<style>body {max-width: 90%;} h1 {color: #00274C;} h2 {color: #2F65A7;} blockquote {border-left: 5px solid #ffcb05; margin: 1.5em 10px; padding: 0.5em 10px;} code {color: red;}</style>

# Get Data
 
> This example uses data from [https://stats.idre.ucla.edu/stata/examples/mlm-imm/introduction-to-multilevel-modeling-by-kreft-and-de-leeuwchapter-4-analyses/](https://stats.idre.ucla.edu/stata/examples/mlm-imm/introduction-to-multilevel-modeling-by-kreft-and-de-leeuwchapter-4-analyses/)

    use https://stats.idre.ucla.edu/stat/examples/imm/imm23, clear
	
	label variable ses "Socioeconomic Status" // correct spelling of variable label

# Basic Spaghetti Plot

    spagplot math ses, id(schid) 
	
    graph export graph1.png, width(500) replace

![Basic Spaghetti Plot](graph1.png)

# Add Better Scheme

> Schemes are very helpful in making better looking Stata graphs. A useful Stata scheme is `s1color`. Useful user written schemes are `lean2`, `plottig` (type `findit lean2` or `findit plottig` to install these), and my own [Michigan Stata graph scheme](https://agrogan1.github.io/Stata/michigan-graph-scheme/).

    spagplot math ses, id(schid) ///
	scheme(michigan) ///
	title("Spaghetti Plot of Math Score By SES") ///
	note(" ") // blank "note" since title explains this graph
	
    graph export graph2.png, width(500) replace

![Spaghetti Plot With Better Options](graph2.png)	

# Now Try `twoway` Syntax

    twoway lfit math ses, scheme(michigan) title("Math Score By SES")
	
    graph export graph3.png, width(500) replace

![Initial `twoway` Graph](graph3.png)

# Separate Panels For Schools

This ONLY works well with a limited number of schools.

    twoway lfit math ses, scheme(michigan) by(schid, title("Math Score By SES")) 
	
    graph export graph4.png, width(1000) replace

![Separate Panels For Schools](graph4.png)	

# Separate Panels For Schools With Scatterplots

    twoway (lfit math ses) ///
	(scatter math ses, mcolor(gs7%30)), /// color gs7 @ 30% transparency
	scheme(michigan) by(schid, title("Math Score By SES"))

    graph export graph5.png, width(1000) replace

![Separate Panels For Schools With Scatterplots](graph5.png)		

# "Model Based" Spaghetti Plot	

A sometimes unacknowledged point is that spaghetti plots--unless we take steps to correct this--reflect *unadjusted*, or *bivariate* associations.

We may sometimes wish to develop a spaghetti plot that reflects the *adjusted* estimates from our models.

To do this we first estimate a multilevel model.

    mixed math ses meanses || schid: // multilevel model; random intercept; no random effects

> NB that this is a model with only a random intercept, $u_0$ and no random slopes e.g. $u_1$, etc.... 

## "Simple" Predicted Values

    predict yhat
	
	spagplot yhat ses, id(schid) scheme(michigan)
	
	graph export graph6A.png, width(500) replace

![Spaghetti Plot With Predicted Values](graph6A.png)		

## "Model Based" Predicted Values

The spaghetti plots so far give an indication of different slopes per school. Below we outline a procedure for (a) developing a spaghetti plot of adjusted estimates; and (b) ensuring that the plot reflects the *exact* structure of the model e.g. random intercept only, or random intercept + random slope(s). 

To carry out this procedure we employ the `_b` notation in Stata. For example, `_b[_cons]` indicates the intercept of the model while `_b[ses]` indicates the slope attached to *ses*.

We need to carry out a few preliminary calculations.

1. Estimate (`predict`) the random effect(s).
2. Estimate the mean values (`summarize`) of variables that we are going to hold constant.
3. Generate predicted values ($\hat y$) using the `_b` notation (`generate yhat = ...`).
4. Graph the spaghetti plot (`twoway connect`).

### Estimate The Random Effects

    mixed math ses meanses || schid: // multilevel model; random intercept; no random effects

    predict u0, reffects
	
### Estimate the Mean Values of Relevant Variables

    summarize meanses

The mean of `meanses` is `s %9.5f r(mean)`.
	
### Estimate Predicted Values

We are using $\beta_0$, the random intercept $u_0$, $\beta_{ses}$ multiplied by the actual value of `ses`, and $\beta_{meanses}$ multiplied by the mean of `meanses`.

    generate yhat2 = _b[_cons] + u0 + _b[ses] * ses + _b[ses] * -.0012717 
	
### Graph The Spaghetti Plot	

    twoway scatter yhat2 ses, scheme(michigan)
	
	graph export graph6B.png, width(500) replace

![Initial "Model Based" Spaghetti Plot](graph6B.png)		

We still have a small amount of work to do to make this look more "spaghetti plot like".

We are going to use `twoway connect` to create connected line plots. We employ option `c(L)` to ensure that only ascending values are connected: i.e. each Level 2 unit has their own regression line. For `c(L)` to work properly we are going to need to sort the data by *school* and *ses*. Lastly, we're going to change the `msymbol` so that we do not see dots, but only lines.

    sort schid ses // sort on Level 2 units and x values
	
    twoway connect yhat2 ses, ///
	lcolor("0 39 76") /// Michigan blue for connecting lines
	title("Model Based Spaghetti Plot") /// title
	xtitle("Socioeconomic Status") /// title for x axis
	ytitle("Model Predicted Values") /// title for y axis
	c(L) /// connect only ascending values
	msymbol(none) /// no marker symbol; only lines
	scheme(michigan) // michigan scheme
	
	graph export graph7.png, width(500) replace

![Finalized "Model Based" Spaghetti Plot](graph7.png)		


